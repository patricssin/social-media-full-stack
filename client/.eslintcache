[{"/Users/patricssin/DEVCONNECTOR/client/src/index.js":"1","/Users/patricssin/DEVCONNECTOR/client/src/App.js":"2","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Navbar.js":"3","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Landing.js":"4","/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Login.js":"5","/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Register.js":"6","/Users/patricssin/DEVCONNECTOR/client/src/store.js":"7","/Users/patricssin/DEVCONNECTOR/client/src/reducers/index.js":"8","/Users/patricssin/DEVCONNECTOR/client/src/reducers/alert.js":"9","/Users/patricssin/DEVCONNECTOR/client/src/actions/types.js":"10","/Users/patricssin/DEVCONNECTOR/client/src/actions/alert.js":"11","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Alert.js":"12","/Users/patricssin/DEVCONNECTOR/client/src/actions/auth.js":"13","/Users/patricssin/DEVCONNECTOR/client/src/reducers/auth.js":"14","/Users/patricssin/DEVCONNECTOR/client/src/utils/setAuthToken.js":"15","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Dashboard.js":"16","/Users/patricssin/DEVCONNECTOR/client/src/components/route/PrivateRoute.js":"17","/Users/patricssin/DEVCONNECTOR/client/src/actions/profile.js":"18","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Spinner.js":"19","/Users/patricssin/DEVCONNECTOR/client/src/reducers/profile.js":"20","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/CreateProfile.js":"21","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/DashboardActions.js":"22","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/EditProfile.js":"23","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddExperience.js":"24","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddEducation.js":"25","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Experience.js":"26","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Education.js":"27"},{"size":146,"mtime":1607077676980,"results":"28","hashOfConfig":"29"},{"size":2057,"mtime":1618111696356,"results":"30","hashOfConfig":"29"},{"size":1284,"mtime":1615088769288,"results":"31","hashOfConfig":"29"},{"size":1003,"mtime":1615089205219,"results":"32","hashOfConfig":"29"},{"size":1983,"mtime":1608955440607,"results":"33","hashOfConfig":"29"},{"size":2822,"mtime":1608955529744,"results":"34","hashOfConfig":"29"},{"size":375,"mtime":1607521295563,"results":"35","hashOfConfig":"29"},{"size":195,"mtime":1615090654759,"results":"36","hashOfConfig":"29"},{"size":368,"mtime":1607524804946,"results":"37","hashOfConfig":"29"},{"size":612,"mtime":1618122943687,"results":"38","hashOfConfig":"29"},{"size":345,"mtime":1607524925780,"results":"39","hashOfConfig":"29"},{"size":447,"mtime":1607524309537,"results":"40","hashOfConfig":"29"},{"size":1970,"mtime":1615092165786,"results":"41","hashOfConfig":"29"},{"size":994,"mtime":1618123357538,"results":"42","hashOfConfig":"29"},{"size":242,"mtime":1608000317130,"results":"43","hashOfConfig":"29"},{"size":1637,"mtime":1618123885071,"results":"44","hashOfConfig":"29"},{"size":451,"mtime":1614520163877,"results":"45","hashOfConfig":"29"},{"size":4296,"mtime":1618123279931,"results":"46","hashOfConfig":"29"},{"size":258,"mtime":1615089345516,"results":"47","hashOfConfig":"29"},{"size":629,"mtime":1616904370150,"results":"48","hashOfConfig":"29"},{"size":5947,"mtime":1616901684680,"results":"49","hashOfConfig":"29"},{"size":656,"mtime":1616593581479,"results":"50","hashOfConfig":"29"},{"size":6936,"mtime":1616901663309,"results":"51","hashOfConfig":"29"},{"size":2847,"mtime":1618114183175,"results":"52","hashOfConfig":"29"},{"size":3131,"mtime":1618111645979,"results":"53","hashOfConfig":"29"},{"size":1220,"mtime":1618123475192,"results":"54","hashOfConfig":"29"},{"size":1210,"mtime":1618123620685,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"zx0jzj",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patricssin/DEVCONNECTOR/client/src/index.js",[],["117","118"],"/Users/patricssin/DEVCONNECTOR/client/src/App.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Navbar.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Landing.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Login.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Register.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/store.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/reducers/index.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/reducers/alert.js",["119"],"import * as types from '../actions/types';\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case types.SET_ALERT:\n      return [...state, payload];\n    case types.REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/Users/patricssin/DEVCONNECTOR/client/src/actions/types.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/actions/alert.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Alert.js",["120"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {};\n\nconst mapStateToState = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToState)(Alert);\n","/Users/patricssin/DEVCONNECTOR/client/src/actions/auth.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/reducers/auth.js",["121"],"/Users/patricssin/DEVCONNECTOR/client/src/utils/setAuthToken.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Dashboard.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/route/PrivateRoute.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/actions/profile.js",["122"],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Spinner.js",["123"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","/Users/patricssin/DEVCONNECTOR/client/src/reducers/profile.js",["124"],"const initState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n}\n\nexport default function(state = initState, action) {\n  const {type, payload} = action\n\n  switch (type) {\n    case 'GET_PROFILE':\n    case 'UPDATE_PROFILE':\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      }\n    case 'PROFILE_ERROR':\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      }\n    case 'CLEAR_PROFILE':\n      return {\n        ...state,\n        profile: null,\n        loading: true,\n        repos: []\n      }\n  \n    default:\n      return state\n  }\n}","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/CreateProfile.js",["125"],"import React, {Fragment, useState} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createProfile} from '../../actions/profile'\n\nconst initialState = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: ''\n};\n\nfunction CreateProfile({createProfile, history}) {\n  const [formData, setFormData] = useState(initialState);\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n  const onSubmit = e => {\n    e.preventDefault()\n    createProfile(formData, history)\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} \n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\n            </div>\n          </Fragment>\n        )}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n      </form>\n    </Fragment>\n  )\n}\n\nCreateProfile.propTypes = {\n  creatProfile: PropTypes.func.isRequired,\n}\n\n{/* use history as props, need use withRouter */}\nexport default connect(null, {createProfile})(withRouter(CreateProfile))\n\n","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/DashboardActions.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/EditProfile.js",["126","127"],"import React, {Fragment, useState, useEffect} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createProfile, getCurrentProfile} from '../../actions/profile'\n\nconst initialState = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: ''\n};\n\nfunction EditProfile({profile: {profile, loading}, createProfile, getCurrentProfile, history}) {\n  const [formData, setFormData] = useState(initialState);\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile()\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.company,\n      githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.twitter ? '' : profile.twitter,\n      facebook: loading || !profile.facebook ? '' : profile.facebook,\n      linkedin: loading || !profile.linkedin ? '' : profile.linkedin,\n      youtube: loading || !profile.youtube ? '' : profile.youtube,\n      instagram: loading || !profile.instagram ? '' : profile.instagram\n    })\n  }, [loading])\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n  const onSubmit = e => {\n    e.preventDefault()\n    createProfile(formData, history, true)\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} \n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\n            </div>\n          </Fragment>\n        )}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n      </form>\n    </Fragment>\n  )\n}\n\nEditProfile.propTypes = {\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n})\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile))\n\n","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddExperience.js",["128","129"],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddEducation.js",["130"],"/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Experience.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Education.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":4,"column":1,"nodeType":"137","endLine":14,"endColumn":2},{"ruleId":"138","severity":1,"message":"139","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":9,"column":1,"nodeType":"137","endLine":43,"endColumn":2},{"ruleId":"138","severity":1,"message":"142","line":165,"column":13,"nodeType":"140","messageId":"141","endLine":165,"endColumn":16},{"ruleId":"135","severity":1,"message":"143","line":4,"column":1,"nodeType":"137","endLine":12,"endColumn":3},{"ruleId":"135","severity":1,"message":"136","line":9,"column":1,"nodeType":"137","endLine":37,"endColumn":2},{"ruleId":"144","severity":1,"message":"145","line":163,"column":1,"nodeType":"146","messageId":"147","endLine":163,"endColumn":50},{"ruleId":"138","severity":1,"message":"139","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":17},{"ruleId":"148","severity":1,"message":"149","line":42,"column":6,"nodeType":"150","endLine":42,"endColumn":15,"suggestions":"151"},{"ruleId":"138","severity":1,"message":"152","line":2,"column":9,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":17},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["155"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.status, profile.twitter, profile.website, profile.youtube]",{"range":"158","text":"159"},[1585,1594],"[getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.status, profile.twitter, profile.website, profile.youtube]"]