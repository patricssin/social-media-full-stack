[{"/Users/patricssin/DEVCONNECTOR/client/src/index.js":"1","/Users/patricssin/DEVCONNECTOR/client/src/App.js":"2","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Navbar.js":"3","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Landing.js":"4","/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Login.js":"5","/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Register.js":"6","/Users/patricssin/DEVCONNECTOR/client/src/store.js":"7","/Users/patricssin/DEVCONNECTOR/client/src/reducers/index.js":"8","/Users/patricssin/DEVCONNECTOR/client/src/reducers/alert.js":"9","/Users/patricssin/DEVCONNECTOR/client/src/actions/types.js":"10","/Users/patricssin/DEVCONNECTOR/client/src/actions/alert.js":"11","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Alert.js":"12","/Users/patricssin/DEVCONNECTOR/client/src/actions/auth.js":"13","/Users/patricssin/DEVCONNECTOR/client/src/reducers/auth.js":"14","/Users/patricssin/DEVCONNECTOR/client/src/utils/setAuthToken.js":"15","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Dashboard.js":"16","/Users/patricssin/DEVCONNECTOR/client/src/components/route/PrivateRoute.js":"17","/Users/patricssin/DEVCONNECTOR/client/src/actions/profile.js":"18","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Spinner.js":"19","/Users/patricssin/DEVCONNECTOR/client/src/reducers/profile.js":"20","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/CreateProfile.js":"21","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/DashboardActions.js":"22","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/EditProfile.js":"23","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddExperience.js":"24","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddEducation.js":"25","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Experience.js":"26","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Education.js":"27","/Users/patricssin/DEVCONNECTOR/client/src/components/profiles/Profiles.js":"28","/Users/patricssin/DEVCONNECTOR/client/src/components/profile/Profile.js":"29","/Users/patricssin/DEVCONNECTOR/client/src/components/profiles/ProfileItem.js":"30","/Users/patricssin/DEVCONNECTOR/client/src/utils/api.js":"31","/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileTop.js":"32","/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileAbout.js":"33"},{"size":146,"mtime":1607077676980,"results":"34","hashOfConfig":"35"},{"size":2302,"mtime":1620827841331,"results":"36","hashOfConfig":"35"},{"size":1374,"mtime":1618922231757,"results":"37","hashOfConfig":"35"},{"size":1003,"mtime":1615089205219,"results":"38","hashOfConfig":"35"},{"size":1983,"mtime":1608955440607,"results":"39","hashOfConfig":"35"},{"size":2822,"mtime":1608955529744,"results":"40","hashOfConfig":"35"},{"size":375,"mtime":1607521295563,"results":"41","hashOfConfig":"35"},{"size":195,"mtime":1615090654759,"results":"42","hashOfConfig":"35"},{"size":368,"mtime":1607524804946,"results":"43","hashOfConfig":"35"},{"size":694,"mtime":1618273023220,"results":"44","hashOfConfig":"35"},{"size":345,"mtime":1607524925780,"results":"45","hashOfConfig":"35"},{"size":447,"mtime":1607524309537,"results":"46","hashOfConfig":"35"},{"size":1956,"mtime":1624682099276,"results":"47","hashOfConfig":"35"},{"size":994,"mtime":1618123357538,"results":"48","hashOfConfig":"35"},{"size":243,"mtime":1624681963758,"results":"49","hashOfConfig":"35"},{"size":1633,"mtime":1624681233874,"results":"50","hashOfConfig":"35"},{"size":451,"mtime":1614520163877,"results":"51","hashOfConfig":"35"},{"size":5520,"mtime":1620828812102,"results":"52","hashOfConfig":"35"},{"size":258,"mtime":1615089345516,"results":"53","hashOfConfig":"35"},{"size":855,"mtime":1618273060002,"results":"54","hashOfConfig":"35"},{"size":5947,"mtime":1616901684680,"results":"55","hashOfConfig":"35"},{"size":656,"mtime":1616593581479,"results":"56","hashOfConfig":"35"},{"size":6936,"mtime":1616901663309,"results":"57","hashOfConfig":"35"},{"size":2847,"mtime":1618114183175,"results":"58","hashOfConfig":"35"},{"size":3131,"mtime":1618111645979,"results":"59","hashOfConfig":"35"},{"size":1220,"mtime":1618123475192,"results":"60","hashOfConfig":"35"},{"size":1210,"mtime":1618123620685,"results":"61","hashOfConfig":"35"},{"size":1176,"mtime":1620825600103,"results":"62","hashOfConfig":"35"},{"size":1269,"mtime":1624683211612,"results":"63","hashOfConfig":"35"},{"size":858,"mtime":1618925367024,"results":"64","hashOfConfig":"35"},{"size":607,"mtime":1620828680511,"results":"65","hashOfConfig":"35"},{"size":1254,"mtime":1624682575824,"results":"66","hashOfConfig":"35"},{"size":691,"mtime":1624683366556,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"zx0jzj",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patricssin/DEVCONNECTOR/client/src/index.js",[],["144","145"],"/Users/patricssin/DEVCONNECTOR/client/src/App.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Navbar.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Landing.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Login.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Register.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/store.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/reducers/index.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/reducers/alert.js",["146"],"import * as types from '../actions/types';\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case types.SET_ALERT:\n      return [...state, payload];\n    case types.REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/Users/patricssin/DEVCONNECTOR/client/src/actions/types.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/actions/alert.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Alert.js",["147"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {};\n\nconst mapStateToState = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToState)(Alert);\n","/Users/patricssin/DEVCONNECTOR/client/src/actions/auth.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/reducers/auth.js",["148"],"import * as types from '../actions/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case types.REGISTER_SUCCESS:\n    case types.LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case types.REGISTER_FAIL:\n    case types.AUTH_ERROR:\n    case types.LOGIN_FAIL:\n    case types.LOGOUT:\n    case types.ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case types.USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/patricssin/DEVCONNECTOR/client/src/utils/setAuthToken.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Dashboard.js",["149"],"/Users/patricssin/DEVCONNECTOR/client/src/components/route/PrivateRoute.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/actions/profile.js",["150"],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Spinner.js",["151"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","/Users/patricssin/DEVCONNECTOR/client/src/reducers/profile.js",["152"],"const initState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n}\n\nexport default function(state = initState, action) {\n  const {type, payload} = action\n\n  switch (type) {\n    case 'GET_PROFILE':\n    case 'UPDATE_PROFILE':\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      }\n    case 'PROFILE_ERROR':\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      }\n    case 'GET_PROFILES':\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      }\n    case 'GET_REPOS':\n      return {\n        ...state,\n        repos: payload,\n        loading: false\n      }\n    case 'CLEAR_PROFILE':\n      return {\n        ...state,\n        profile: null,\n        loading: true,\n        repos: []\n      }\n  \n    default:\n      return state\n  }\n}","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/CreateProfile.js",["153"],"import React, {Fragment, useState} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createProfile} from '../../actions/profile'\n\nconst initialState = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: ''\n};\n\nfunction CreateProfile({createProfile, history}) {\n  const [formData, setFormData] = useState(initialState);\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n  const onSubmit = e => {\n    e.preventDefault()\n    createProfile(formData, history)\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} \n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\n            </div>\n          </Fragment>\n        )}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n      </form>\n    </Fragment>\n  )\n}\n\nCreateProfile.propTypes = {\n  creatProfile: PropTypes.func.isRequired,\n}\n\n{/* use history as props, need use withRouter */}\nexport default connect(null, {createProfile})(withRouter(CreateProfile))\n\n","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/DashboardActions.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/EditProfile.js",["154","155"],"import React, {Fragment, useState, useEffect} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createProfile, getCurrentProfile} from '../../actions/profile'\n\nconst initialState = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: ''\n};\n\nfunction EditProfile({profile: {profile, loading}, createProfile, getCurrentProfile, history}) {\n  const [formData, setFormData] = useState(initialState);\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile()\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.company,\n      githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.twitter ? '' : profile.twitter,\n      facebook: loading || !profile.facebook ? '' : profile.facebook,\n      linkedin: loading || !profile.linkedin ? '' : profile.linkedin,\n      youtube: loading || !profile.youtube ? '' : profile.youtube,\n      instagram: loading || !profile.instagram ? '' : profile.instagram\n    })\n  }, [loading])\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n  const onSubmit = e => {\n    e.preventDefault()\n    createProfile(formData, history, true)\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} \n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\n            </div>\n          </Fragment>\n        )}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n      </form>\n    </Fragment>\n  )\n}\n\nEditProfile.propTypes = {\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n})\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile))\n\n","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddExperience.js",["156","157"],"import React, { Fragment, useState } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux'\nimport {addExperience} from '../../actions/profile'\n\nconst AddExperience = ({addExperience, history}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  })\n\n  const [toDateDisabled, toggleDisabled] = useState(false)\n\n  const {company, title, location, from , to, current, description} = formData\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n       Add An Experience\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => {\n        e.preventDefault()\n        addExperience(formData, history)\n      }}>\n        <div className=\"form-group\">\n          <input onChange={e => onChange(e)} value={title} type=\"text\" placeholder=\"* Job Title\" name=\"title\" required />\n        </div>\n        <div className=\"form-group\">\n          <input onChange={e => onChange(e)} value={company} type=\"text\" placeholder=\"* Company\" name=\"company\" required />\n        </div>\n        <div className=\"form-group\">\n          <input onChange={e => onChange(e)} value={location} type=\"text\" placeholder=\"Location\" name=\"location\" />\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input onChange={e => onChange(e)} value={from} type=\"date\" name=\"from\" />\n        </div>\n         <div className=\"form-group\">\n          <p><input onChange={e => {\n            setFormData({...formData, current: !current})\n            toggleDisabled(!toDateDisabled)\n          }} type=\"checkbox\" name=\"current\" value={current} /> Current Job</p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input onChange={e => onChange(e)} value={to} type=\"date\" name=\"to\" disabled={toDateDisabled ? 'disable' : ''} />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            onChange={onChange}\n            value={description}\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Job Description\"\n          ></textarea>\n        </div>\n        <input onChange={e => onChange(e)} type=\"submit\" className=\"btn btn-primary my-1\" />\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n      </form>\n    </Fragment>\n  )\n}\n\nAddExperience.propTypes = {\n\n}\n\nexport default connect(null, {addExperience})(withRouter(AddExperience))\n","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddEducation.js",["158"],"import React, { Fragment, useState } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux'\nimport {addEducation} from '../../actions/profile'\n\nconst AddEducation = ({addEducation, history}) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  });\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    description,\n    current\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Add Your Education</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\" /> Add any school or bootcamp that you\n        have attended\n      </p>\n      <small>* = required field</small>\n      <form\n        className=\"form\"\n        onSubmit={e => {\n          e.preventDefault();\n          addEducation(formData, history);\n        }}\n      >\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* School or Bootcamp\"\n            name=\"school\"\n            value={school}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Degree or Certificate\"\n            name=\"degree\"\n            value={degree}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Field of Study\"\n            name=\"fieldofstudy\"\n            value={fieldofstudy}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input type=\"date\" name=\"from\" value={from} onChange={onChange} />\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={current}\n              value={current}\n              onChange={() => setFormData({ ...formData, current: !current })}\n            />{' '}\n            Current School\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            onChange={onChange}\n            disabled={current}\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Program Description\"\n            value={description}\n            onChange={onChange}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  )\n}\n\nexport default connect(null, {addEducation})(withRouter(AddEducation))\n","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Experience.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Education.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profiles/Profiles.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile/Profile.js",["159","160"],"/Users/patricssin/DEVCONNECTOR/client/src/components/profiles/ProfileItem.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/utils/api.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileTop.js",["161","162","163","164","165","166"],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileAbout.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":4,"column":1,"nodeType":"173","endLine":14,"endColumn":2},{"ruleId":"174","severity":1,"message":"175","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":9,"column":1,"nodeType":"173","endLine":43,"endColumn":2},{"ruleId":"178","severity":1,"message":"179","line":14,"column":6,"nodeType":"180","endLine":14,"endColumn":8,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"182","line":219,"column":13,"nodeType":"176","messageId":"177","endLine":219,"endColumn":16},{"ruleId":"171","severity":1,"message":"183","line":4,"column":1,"nodeType":"173","endLine":12,"endColumn":3},{"ruleId":"171","severity":1,"message":"172","line":9,"column":1,"nodeType":"173","endLine":49,"endColumn":2},{"ruleId":"184","severity":1,"message":"185","line":163,"column":1,"nodeType":"186","messageId":"187","endLine":163,"endColumn":50},{"ruleId":"174","severity":1,"message":"175","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"178","severity":1,"message":"188","line":42,"column":6,"nodeType":"180","endLine":42,"endColumn":15,"suggestions":"189"},{"ruleId":"174","severity":1,"message":"190","line":2,"column":9,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":17},{"ruleId":"178","severity":1,"message":"191","line":13,"column":6,"nodeType":"180","endLine":13,"endColumn":22,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":22,"column":9,"nodeType":"195","endLine":22,"endColumn":63},{"ruleId":"193","severity":1,"message":"194","line":25,"column":9,"nodeType":"195","endLine":25,"endColumn":63},{"ruleId":"193","severity":1,"message":"194","line":28,"column":9,"nodeType":"195","endLine":28,"endColumn":63},{"ruleId":"193","severity":1,"message":"194","line":31,"column":9,"nodeType":"195","endLine":31,"endColumn":63},{"ruleId":"193","severity":1,"message":"194","line":34,"column":9,"nodeType":"195","endLine":34,"endColumn":63},{"ruleId":"193","severity":1,"message":"194","line":37,"column":9,"nodeType":"195","endLine":37,"endColumn":63},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["198"],"'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["199"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["200"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"207","text":"208"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.status, profile.twitter, profile.website, profile.youtube]",{"range":"209","text":"210"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"211","text":"212"},[527,529],"[getCurrentProfile]",[1585,1594],"[getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.status, profile.twitter, profile.website, profile.youtube]",[487,503],"[getProfileById, match.params.id]"]