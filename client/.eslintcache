[{"/Users/patricssin/DEVCONNECTOR/client/src/index.js":"1","/Users/patricssin/DEVCONNECTOR/client/src/App.js":"2","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Navbar.js":"3","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Landing.js":"4","/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Login.js":"5","/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Register.js":"6","/Users/patricssin/DEVCONNECTOR/client/src/store.js":"7","/Users/patricssin/DEVCONNECTOR/client/src/reducers/index.js":"8","/Users/patricssin/DEVCONNECTOR/client/src/reducers/alert.js":"9","/Users/patricssin/DEVCONNECTOR/client/src/actions/types.js":"10","/Users/patricssin/DEVCONNECTOR/client/src/actions/alert.js":"11","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Alert.js":"12","/Users/patricssin/DEVCONNECTOR/client/src/actions/auth.js":"13","/Users/patricssin/DEVCONNECTOR/client/src/reducers/auth.js":"14","/Users/patricssin/DEVCONNECTOR/client/src/utils/setAuthToken.js":"15","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Dashboard.js":"16","/Users/patricssin/DEVCONNECTOR/client/src/components/route/PrivateRoute.js":"17","/Users/patricssin/DEVCONNECTOR/client/src/actions/profile.js":"18","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Spinner.js":"19","/Users/patricssin/DEVCONNECTOR/client/src/reducers/profile.js":"20","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/CreateProfile.js":"21","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/DashboardActions.js":"22","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/EditProfile.js":"23","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddExperience.js":"24","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddEducation.js":"25","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Experience.js":"26","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Education.js":"27","/Users/patricssin/DEVCONNECTOR/client/src/components/profiles/Profiles.js":"28","/Users/patricssin/DEVCONNECTOR/client/src/components/profile/Profile.js":"29","/Users/patricssin/DEVCONNECTOR/client/src/components/profiles/ProfileItem.js":"30","/Users/patricssin/DEVCONNECTOR/client/src/utils/api.js":"31","/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileTop.js":"32","/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileAbout.js":"33","/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileExperience.js":"34","/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileEducation.js":"35","/Users/patricssin/DEVCONNECTOR/client/src/utils/formatDate.js":"36","/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileGithub.js":"37","/Users/patricssin/DEVCONNECTOR/client/src/reducers/post.js":"38","/Users/patricssin/DEVCONNECTOR/client/src/components/post/Post.js":"39","/Users/patricssin/DEVCONNECTOR/client/src/actions/post.js":"40","/Users/patricssin/DEVCONNECTOR/client/src/components/post/PostItem.js":"41"},{"size":146,"mtime":1607077676980,"results":"42","hashOfConfig":"43"},{"size":2415,"mtime":1626094594004,"results":"44","hashOfConfig":"43"},{"size":1456,"mtime":1626094876607,"results":"45","hashOfConfig":"43"},{"size":1003,"mtime":1615089205219,"results":"46","hashOfConfig":"43"},{"size":1983,"mtime":1608955440607,"results":"47","hashOfConfig":"43"},{"size":2822,"mtime":1608955529744,"results":"48","hashOfConfig":"43"},{"size":375,"mtime":1607521295563,"results":"49","hashOfConfig":"43"},{"size":229,"mtime":1626092882428,"results":"50","hashOfConfig":"43"},{"size":368,"mtime":1607524804946,"results":"51","hashOfConfig":"43"},{"size":731,"mtime":1626093892972,"results":"52","hashOfConfig":"43"},{"size":345,"mtime":1607524925780,"results":"53","hashOfConfig":"43"},{"size":447,"mtime":1607524309537,"results":"54","hashOfConfig":"43"},{"size":1956,"mtime":1624682099276,"results":"55","hashOfConfig":"43"},{"size":994,"mtime":1618123357538,"results":"56","hashOfConfig":"43"},{"size":243,"mtime":1624681963758,"results":"57","hashOfConfig":"43"},{"size":1633,"mtime":1624681233874,"results":"58","hashOfConfig":"43"},{"size":451,"mtime":1614520163877,"results":"59","hashOfConfig":"43"},{"size":5521,"mtime":1625739160738,"results":"60","hashOfConfig":"43"},{"size":258,"mtime":1615089345516,"results":"61","hashOfConfig":"43"},{"size":884,"mtime":1625794376478,"results":"62","hashOfConfig":"43"},{"size":5947,"mtime":1616901684680,"results":"63","hashOfConfig":"43"},{"size":656,"mtime":1616593581479,"results":"64","hashOfConfig":"43"},{"size":6936,"mtime":1616901663309,"results":"65","hashOfConfig":"43"},{"size":2847,"mtime":1618114183175,"results":"66","hashOfConfig":"43"},{"size":3131,"mtime":1618111645979,"results":"67","hashOfConfig":"43"},{"size":1220,"mtime":1618123475192,"results":"68","hashOfConfig":"43"},{"size":1210,"mtime":1618123620685,"results":"69","hashOfConfig":"43"},{"size":1176,"mtime":1620825600103,"results":"70","hashOfConfig":"43"},{"size":2539,"mtime":1626092935766,"results":"71","hashOfConfig":"43"},{"size":858,"mtime":1618925367024,"results":"72","hashOfConfig":"43"},{"size":607,"mtime":1620828680511,"results":"73","hashOfConfig":"43"},{"size":1298,"mtime":1625793691139,"results":"74","hashOfConfig":"43"},{"size":711,"mtime":1625793691139,"results":"75","hashOfConfig":"43"},{"size":579,"mtime":1625793691139,"results":"76","hashOfConfig":"43"},{"size":574,"mtime":1625738234759,"results":"77","hashOfConfig":"43"},{"size":117,"mtime":1625738277758,"results":"78","hashOfConfig":"43"},{"size":1004,"mtime":1625802530999,"results":"79","hashOfConfig":"43"},{"size":334,"mtime":1626093602545,"results":"80","hashOfConfig":"43"},{"size":805,"mtime":1626514626835,"results":"81","hashOfConfig":"43"},{"size":436,"mtime":1626094658624,"results":"82","hashOfConfig":"43"},{"size":1519,"mtime":1626515948194,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"zx0jzj",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/patricssin/DEVCONNECTOR/client/src/index.js",[],["184","185"],"/Users/patricssin/DEVCONNECTOR/client/src/App.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Navbar.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Landing.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Login.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/auth/Register.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/store.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/reducers/index.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/reducers/alert.js",["186"],"import * as types from '../actions/types';\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case types.SET_ALERT:\n      return [...state, payload];\n    case types.REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/Users/patricssin/DEVCONNECTOR/client/src/actions/types.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/actions/alert.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Alert.js",["187"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {};\n\nconst mapStateToState = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToState)(Alert);\n","/Users/patricssin/DEVCONNECTOR/client/src/actions/auth.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/reducers/auth.js",["188"],"import * as types from '../actions/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case types.REGISTER_SUCCESS:\n    case types.LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case types.REGISTER_FAIL:\n    case types.AUTH_ERROR:\n    case types.LOGIN_FAIL:\n    case types.LOGOUT:\n    case types.ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case types.USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/patricssin/DEVCONNECTOR/client/src/utils/setAuthToken.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Dashboard.js",["189"],"import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile'\n\nimport DashboardActions from './DashboardActions'\nimport Experience from './Experience'\nimport Education from './Education'\n\nconst Dashboard = ({ getCurrentProfile, deleteAccount, auth: { user }, profile: { loading, profile } }) => {\n  useEffect(() => {\n    getCurrentProfile()\n  }, [])\n\n\n  return loading && profile === null ? <Spinner /> : <Fragment>\n    <h1 className=\"large text-primary\">Dashboard</h1>\n    <p className=\"lead\">\n      <i className=\"fas fa-user\" /> Welcome {user && user.name}\n    </p>\n    {\n      profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div className=\"my-2\">\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n              <i className=\"fas fa-user-minus\" /> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n          </Link>\n        </Fragment>\n      )\n    }\n  </Fragment>;\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\n","/Users/patricssin/DEVCONNECTOR/client/src/components/route/PrivateRoute.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/actions/profile.js",["190"],"import api from '../utils/api';\nimport {setAlert} from './alert'\n\nimport * as types from './types'\n\n// get cur user's profiles\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await api.get('/profile/me')\n\n    dispatch({\n      type: types.GET_PROFILE,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: types.PROFILE_ERROR,\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n// get all user's profiles\nexport const getAllProfiles = () => async (dispatch) => {\n  dispatch({type: types.CLEAR_PROFILE})\n  try {\n    const res = await api.get('/profile')\n\n    dispatch({\n      type: types.GET_PROFILES,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: types.PROFILE_ERROR,\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n// get all user's profiles\nexport const getProfileById = userId => async (dispatch) => {\n  try {\n    const url = `/profile/user/${userId}`\n    const res = await api.get(url)\n\n    dispatch({\n      type: types.GET_PROFILE,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: types.PROFILE_ERROR,\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n// get github repo\nexport const getGithubRepos = userName => async (dispatch) => {\n  dispatch({type: types.CLEAR_PROFILE})\n  try {\n    const res = await api.get(`/profile/github/${userName}`)\n\n    dispatch({\n      type: types.GET_REPOS,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: types.PROFILE_ERROR,\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n// create or update profile\nexport const createProfile = (formData, history, edit = false) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type' : 'application/json'\n      }\n    }\n    const res = api.post('/profile',formData, config)\n\n    dispatch({\n      type: types.GET_PROFILE,\n      payload: res.data,\n    })\n    dispatch(setAlert(edit ? 'Profile updated' : 'Profile created', 'success'))\n\n    // redirect by history\n    if (!edit) {\n      history.push('/dashboard')\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((err) => {\n        dispatch(setAlert(err.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: types.PROFILE_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status}\n    })\n  }\n}\n\n// add experiencee\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type' : 'application/json'\n      }\n    }\n    const res = api.put('/profile/experience',formData, config)\n\n    dispatch({\n      type: types.UPDATE_PROFILE,\n      payload: res.data,\n    })\n    dispatch(setAlert('Experience added.', 'success'))\n\n    // redirect by history\n    history.push('/dashboard')\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((err) => {\n        dispatch(setAlert(err.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: types.PROFILE_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status}\n    })\n  }\n}\n\n// add education\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type' : 'application/json'\n      }\n    }\n    const res = api.put('/profile/education',formData, config)\n\n    dispatch({\n      type: types.UPDATE_PROFILE,\n      payload: res.data,\n    })\n    dispatch(setAlert('Education added.', 'success'))\n\n    // redirect by history\n    history.push('/dashboard')\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((err) => {\n        dispatch(setAlert(err.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: types.PROFILE_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status}\n    })\n  }\n}\n\n// delete experience\nexport const deleteExperience = id => async (dispatch) => {\n  try {\n    const res = await api.delete(`/profile/experience/${id}`)\n    dispatch({\n      type: types.UPDATE_PROFILE,\n      payload: res.data,\n    })\n    dispatch(setAlert('Experience delete.', 'success'))\n  } catch (err) {\n    dispatch({\n      type: types.PROFILE_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status}\n    })\n  }\n}\n\n// delete education\nexport const deleteEducation = id => async (dispatch) => {\n  try {\n    const res = await api.delete(`/profile/education/${id}`)\n    dispatch({\n      type: types.UPDATE_PROFILE,\n      payload: res.data,\n    })\n    dispatch(setAlert('Education delete.', 'success'))\n  } catch (err) {\n    dispatch({\n      type: types.PROFILE_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status}\n    })\n  }\n}\n\n// delete account\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      const res = await api.delete('/profile')\n      dispatch({type: types.CLEAR_PROFILE})\n      dispatch({type: types.ACCOUNT_DELETED})\n      dispatch(setAlert('Your account has been permanently deleted.'))\n    } catch (err) {\n      dispatch({\n        type: types.PROFILE_ERROR,\n        payload: {msg: err.response.statusText, status: err.response.status}\n      })\n    }\n  }\n}","/Users/patricssin/DEVCONNECTOR/client/src/components/layout/Spinner.js",["191"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","/Users/patricssin/DEVCONNECTOR/client/src/reducers/profile.js",["192"],"const initState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n}\n\nexport default function(state = initState, action) {\n  const {type, payload} = action\n\n  switch (type) {\n    case 'GET_PROFILE':\n    case 'UPDATE_PROFILE':\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      }\n    case 'PROFILE_ERROR':\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null,\n      }\n    case 'GET_PROFILES':\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      }\n    case 'GET_REPOS':\n      return {\n        ...state,\n        repos: [...payload],\n        loading: false\n      }\n    case 'CLEAR_PROFILE':\n      return {\n        ...state,\n        profile: null,\n        loading: true,\n        repos: []\n      }\n  \n    default:\n      return state\n  }\n}","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/CreateProfile.js",["193"],"import React, {Fragment, useState} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createProfile} from '../../actions/profile'\n\nconst initialState = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: ''\n};\n\nfunction CreateProfile({createProfile, history}) {\n  const [formData, setFormData] = useState(initialState);\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n  const onSubmit = e => {\n    e.preventDefault()\n    createProfile(formData, history)\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} \n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\n            </div>\n          </Fragment>\n        )}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n      </form>\n    </Fragment>\n  )\n}\n\nCreateProfile.propTypes = {\n  creatProfile: PropTypes.func.isRequired,\n}\n\n{/* use history as props, need use withRouter */}\nexport default connect(null, {createProfile})(withRouter(CreateProfile))\n\n","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/DashboardActions.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/EditProfile.js",["194","195"],"import React, {Fragment, useState, useEffect} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {createProfile, getCurrentProfile} from '../../actions/profile'\n\nconst initialState = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: ''\n};\n\nfunction EditProfile({profile: {profile, loading}, createProfile, getCurrentProfile, history}) {\n  const [formData, setFormData] = useState(initialState);\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile()\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.company,\n      githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.twitter ? '' : profile.twitter,\n      facebook: loading || !profile.facebook ? '' : profile.facebook,\n      linkedin: loading || !profile.linkedin ? '' : profile.linkedin,\n      youtube: loading || !profile.youtube ? '' : profile.youtube,\n      instagram: loading || !profile.instagram ? '' : profile.instagram\n    })\n  }, [loading])\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n  const onSubmit = e => {\n    e.preventDefault()\n    createProfile(formData, history, true)\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} \n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\n            </div>\n          </Fragment>\n        )}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n      </form>\n    </Fragment>\n  )\n}\n\nEditProfile.propTypes = {\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n})\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile))\n\n","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddExperience.js",["196","197"],"import React, { Fragment, useState } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux'\nimport {addExperience} from '../../actions/profile'\n\nconst AddExperience = ({addExperience, history}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  })\n\n  const [toDateDisabled, toggleDisabled] = useState(false)\n\n  const {company, title, location, from , to, current, description} = formData\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n       Add An Experience\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => {\n        e.preventDefault()\n        addExperience(formData, history)\n      }}>\n        <div className=\"form-group\">\n          <input onChange={e => onChange(e)} value={title} type=\"text\" placeholder=\"* Job Title\" name=\"title\" required />\n        </div>\n        <div className=\"form-group\">\n          <input onChange={e => onChange(e)} value={company} type=\"text\" placeholder=\"* Company\" name=\"company\" required />\n        </div>\n        <div className=\"form-group\">\n          <input onChange={e => onChange(e)} value={location} type=\"text\" placeholder=\"Location\" name=\"location\" />\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input onChange={e => onChange(e)} value={from} type=\"date\" name=\"from\" />\n        </div>\n         <div className=\"form-group\">\n          <p><input onChange={e => {\n            setFormData({...formData, current: !current})\n            toggleDisabled(!toDateDisabled)\n          }} type=\"checkbox\" name=\"current\" value={current} /> Current Job</p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input onChange={e => onChange(e)} value={to} type=\"date\" name=\"to\" disabled={toDateDisabled ? 'disable' : ''} />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            onChange={onChange}\n            value={description}\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Job Description\"\n          ></textarea>\n        </div>\n        <input onChange={e => onChange(e)} type=\"submit\" className=\"btn btn-primary my-1\" />\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n      </form>\n    </Fragment>\n  )\n}\n\nAddExperience.propTypes = {\n\n}\n\nexport default connect(null, {addExperience})(withRouter(AddExperience))\n","/Users/patricssin/DEVCONNECTOR/client/src/components/profile-forms/AddEducation.js",["198"],"import React, { Fragment, useState } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux'\nimport {addEducation} from '../../actions/profile'\n\nconst AddEducation = ({addEducation, history}) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  });\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    description,\n    current\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Add Your Education</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\" /> Add any school or bootcamp that you\n        have attended\n      </p>\n      <small>* = required field</small>\n      <form\n        className=\"form\"\n        onSubmit={e => {\n          e.preventDefault();\n          addEducation(formData, history);\n        }}\n      >\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* School or Bootcamp\"\n            name=\"school\"\n            value={school}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Degree or Certificate\"\n            name=\"degree\"\n            value={degree}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Field of Study\"\n            name=\"fieldofstudy\"\n            value={fieldofstudy}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input type=\"date\" name=\"from\" value={from} onChange={onChange} />\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={current}\n              value={current}\n              onChange={() => setFormData({ ...formData, current: !current })}\n            />{' '}\n            Current School\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            onChange={onChange}\n            disabled={current}\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Program Description\"\n            value={description}\n            onChange={onChange}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  )\n}\n\nexport default connect(null, {addEducation})(withRouter(AddEducation))\n","/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Experience.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/dashboard/Education.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profiles/Profiles.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile/Profile.js",["199"],"import React, { Fragment, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Spinner from '../layout/Spinner'\nimport ProfileTop from './ProfileTop'\nimport ProfileAbout from './ProfileAbout'\nimport ProfileExperience from './ProfileExperience'\nimport ProfileEducation from './ProfileEducation'\n// import ProfileGithub from './ProfileGithub'\nimport { getProfileById, getGithubRepos } from '../../actions/profile'\n\nconst Profile = ({ getProfileById, getGithubRepos, profile: { profile, loading, repos }, auth, match }) => {\n  useEffect(() => {\n    getProfileById(match.params.id)\n  }, [getProfileById])\n\n  return (\n    <>\n      {profile === null || loading ? <Spinner /> : <Fragment>\n        <Link to='/profiles' className='btn btn-light'>Back To Profiles</Link>\n        {auth.isAuthenticated &&\n          auth.loading === false &&\n          auth.user._id === profile.user._id && (\n            <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n              Edit Profile\n            </Link>\n          )}\n\n        <div className=\"profile-grid my-1\">\n          <ProfileTop profile={profile} />\n          <ProfileAbout profile={profile} />\n\n          <div className=\"profile-exp bg-white p-2\">\n            <h2 className=\"text-primary\">Experience</h2>\n            {profile.experience.length > 0 ? (<Fragment>\n              {profile.experience.map(experience => (\n                <ProfileExperience key={experience._id} experience={experience} />\n              ))}\n            </Fragment>) : (<h4>No experience credentials</h4>)}\n          </div>\n\n          <div className=\"profile-edu bg-white p-2\">\n            <h2 className=\"text-primary\">Education</h2>\n            {profile.education.length > 0 ? (\n              <Fragment>\n                {profile.education.map((education) => (\n                  <ProfileEducation\n                    key={education._id}\n                    education={education}\n                  />\n                ))}\n              </Fragment>\n            ) : (\n              <h4>No education credentials</h4>\n            )}\n          </div>\n\n          {/* {profile.githubusername && (\n              <ProfileGithub repos={repos} getGithubRepos={getGithubRepos} username={profile.githubusername} />\n            )} */}\n        </div>\n      </Fragment>}\n    </>\n  )\n}\n\nProfile.propTypes = {\n\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { getProfileById, getGithubRepos })(Profile)\n","/Users/patricssin/DEVCONNECTOR/client/src/components/profiles/ProfileItem.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/utils/api.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileTop.js",["200","201","202","203","204","205"],"import React from 'react'\n\nconst ProfileTop = ({ profile: {\n  status,\n  company,\n  location,\n  website,\n  social,\n  user: { name, avatar }\n} }) => {\n  return (\n    <div className=\"profile-top bg-primary p-2\">\n      <img\n        className=\"round-img my-1\"\n        src={avatar}\n        alt=\"\"\n      />\n      <h1 className=\"large\">{name}</h1>\n      <p className=\"lead\">{status} {company && <span>at {company}</span>}</p>\n      <p>{location}</p>\n      <div className=\"icons my-1\">\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fas fa-globe fa-2x\"></i>\n        </a>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-twitter fa-2x\"></i>\n        </a>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-facebook fa-2x\"></i>\n        </a>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-linkedin fa-2x\"></i>\n        </a>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-youtube fa-2x\"></i>\n        </a>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-instagram fa-2x\"></i>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileTop\n","/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileAbout.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileExperience.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileEducation.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/utils/formatDate.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/components/profile/ProfileGithub.js",["206"],"import React, {useEffect} from 'react'\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username)\n  }, [username])\n\n  return (\n    <div className=\"profile-github\">\n    <h2 className=\"text-primary my-1\">Github Repos</h2>\n    {repos.map(repo => (\n      <div key={repo.id} className=\"repo bg-white p-1 my-1\">\n        <div>\n          <h4>\n            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {repo.name}\n            </a>\n          </h4>\n          <p>{repo.description}</p>\n        </div>\n        <div>\n          <ul>\n            <li className=\"badge badge-primary\">\n              Stars: {repo.stargazers_count}\n            </li>\n            <li className=\"badge badge-dark\">\n              Watchers: {repo.watchers_count}\n            </li>\n            <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n          </ul>\n        </div>\n      </div>\n    ))}\n  </div>\n  )\n}\n\nexport default ProfileGithub",["207","208"],"/Users/patricssin/DEVCONNECTOR/client/src/reducers/post.js",["209"],"const initState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n}\n\nexport default function(state = initState, action) {\n  const {type, payload} = action\n\n  switch (type) {\n    case 'GET_POSTS':\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      }\n  \n    default:\n      return state\n  }\n}","/Users/patricssin/DEVCONNECTOR/client/src/components/post/Post.js",[],"/Users/patricssin/DEVCONNECTOR/client/src/actions/post.js",["210"],"import api from '../utils/api';\nimport {setAlert} from './alert'\n\nimport * as types from './types'\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await api.get('/posts')\n\n    dispatch({\n      type: types.GET_POSTS,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: types.PROFILE_ERROR,\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}","/Users/patricssin/DEVCONNECTOR/client/src/components/post/PostItem.js",["211"],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":4,"column":1,"nodeType":"218","endLine":14,"endColumn":2},{"ruleId":"219","severity":1,"message":"220","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":9,"column":1,"nodeType":"218","endLine":43,"endColumn":2},{"ruleId":"223","severity":1,"message":"224","line":14,"column":6,"nodeType":"225","endLine":14,"endColumn":8,"suggestions":"226"},{"ruleId":"219","severity":1,"message":"227","line":219,"column":13,"nodeType":"221","messageId":"222","endLine":219,"endColumn":16},{"ruleId":"216","severity":1,"message":"228","line":4,"column":1,"nodeType":"218","endLine":12,"endColumn":3},{"ruleId":"216","severity":1,"message":"217","line":9,"column":1,"nodeType":"218","endLine":50,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":163,"column":1,"nodeType":"231","messageId":"232","endLine":163,"endColumn":50},{"ruleId":"219","severity":1,"message":"220","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":17},{"ruleId":"223","severity":1,"message":"233","line":42,"column":6,"nodeType":"225","endLine":42,"endColumn":15,"suggestions":"234"},{"ruleId":"219","severity":1,"message":"235","line":2,"column":9,"nodeType":"221","messageId":"222","endLine":2,"endColumn":13},{"ruleId":"219","severity":1,"message":"220","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":17},{"ruleId":"219","severity":1,"message":"220","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":17},{"ruleId":"223","severity":1,"message":"236","line":15,"column":6,"nodeType":"225","endLine":15,"endColumn":22,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":22,"column":9,"nodeType":"240","endLine":22,"endColumn":63},{"ruleId":"238","severity":1,"message":"239","line":25,"column":9,"nodeType":"240","endLine":25,"endColumn":63},{"ruleId":"238","severity":1,"message":"239","line":28,"column":9,"nodeType":"240","endLine":28,"endColumn":63},{"ruleId":"238","severity":1,"message":"239","line":31,"column":9,"nodeType":"240","endLine":31,"endColumn":63},{"ruleId":"238","severity":1,"message":"239","line":34,"column":9,"nodeType":"240","endLine":34,"endColumn":63},{"ruleId":"238","severity":1,"message":"239","line":37,"column":9,"nodeType":"240","endLine":37,"endColumn":63},{"ruleId":"223","severity":1,"message":"241","line":6,"column":6,"nodeType":"225","endLine":6,"endColumn":16,"suggestions":"242"},{"ruleId":"212","replacedBy":"243"},{"ruleId":"214","replacedBy":"244"},{"ruleId":"216","severity":1,"message":"217","line":8,"column":1,"nodeType":"218","endLine":22,"endColumn":2},{"ruleId":"219","severity":1,"message":"245","line":2,"column":9,"nodeType":"221","messageId":"222","endLine":2,"endColumn":17},{"ruleId":"219","severity":1,"message":"235","line":2,"column":9,"nodeType":"221","messageId":"222","endLine":2,"endColumn":13},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["248"],"'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["249"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["250"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getGithubRepos'. Either include it or remove the dependency array. If 'getGithubRepos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["251"],["246"],["247"],"'setAlert' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"260","text":"261"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.status, profile.twitter, profile.website, profile.youtube]",{"range":"262","text":"263"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"264","text":"265"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"266","text":"267"},[527,529],"[getCurrentProfile]",[1585,1594],"[getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.status, profile.twitter, profile.website, profile.youtube]",[640,656],"[getProfileById, match.params.id]",[159,169],"[getGithubRepos, username]"]